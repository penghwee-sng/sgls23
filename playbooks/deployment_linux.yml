---
- name: Deployment for Linux
  gather_facts: false
  hosts: linux
  become: true
  vars:
    - scan_directory: /var/log/
    - download_url: http://192.168.13.129:8000
    - splunk_ip: 34.87.174.56:9997
    - username: "linux_user"
    - password: "ThisIsTheLinuxPassword?"
  tasks:
    - name: Update packages list
      shell: sudo apt update
      tags: system

    - name: Upgrade packages
      shell: sudo apt upgrade -y
      tags: system

    - name: Install Auditd
      shell: sudo apt-get install auditd --assume-yes
      tags: auditd

    - name: Enable Auditd
      shell: sudo systemctl enable auditd
      tags: auditd

    - name: Transfer audit.rules
      ansible.builtin.copy:
        src: resources/audit.rules
        dest: /etc/audit/rules.d/audit.rules
      tags: auditd

    - name: Restart auditd
      shell: sudo systemctl restart auditd
      tags: auditd

    - name: Install AppArmor
      ansible.builtin.shell: sudo apt install apparmor -y
      tags: apparmor

    - name: Start AppArmor service
      ansible.builtin.shell: sudo systemctl start apparmor
      tags: apparmor

    - name: Install ClamAV
      ansible.builtin.shell: sudo apt install clamav clamav-daemon -y
      tags: clamav

    - name: Stop ClamAV freshclam for update
      ansible.builtin.shell: sudo systemctl stop clamav-freshclam
      tags: clamav

    - name: Update VD
      ansible.builtin.shell: sudo freshclam
      tags: clamav

    - name: Start ClamAV freshclam
      ansible.builtin.shell: systemctl start clamav-freshclam
      tags: clamav

    - name: Enable ClamAV service
      ansible.builtin.shell: systemctl enable clamav-freshclam
      tags: clamav

    - name: Scan with clamscan
      ansible.builtin.shell: 'sudo clamscan --infected --recursive --no-summary {{ scan_directory }} | perl -ne ''$|=1; print localtime . ": [clamscan] $_"''>> /var/log/clamav/infected_files.log'
      tags:
        - clamav
        - avscan

    - name: Check if Splunk Forwarder exists
      stat:
        path: /opt/splunkforwarder
      register: splunk_stat
      tags: splunk

    - name: Create /tmp/deploy
      ansible.builtin.file:
        path: /tmp/deploy
        state: directory
      when: not splunk_stat.stat.exists
      tags: splunk

    - name: Download file
      ansible.builtin.get_url:
        url: "{{ download_url }}/splunkforwarder.tgz"
        dest: /tmp/deploy/splunkforwarder.tgz
      when: not splunk_stat.stat.exists
      tags: splunk

    - name: Unzip Splunk file
      ansible.builtin.unarchive:
        src: /tmp/deploy/splunkforwarder.tgz
        dest: /opt/
        remote_src: yes
      when: not splunk_stat.stat.exists
      tags: splunk

    - name: Ensure group "splunk" exists
      ansible.builtin.group:
        name: splunk
        state: present
      tags: splunk

    - name: Add the user 'splunk'
      ansible.builtin.user:
        name: splunk
        shell: /bin/bash
        groups: splunk
        append: yes
      tags: splunk

    - name: Change owner
      ansible.builtin.shell: sudo chown -R splunk:splunk /opt/splunkforwarder
      tags: splunk

    - name: Auto start Splunk Forwarder on boot
      expect:
        command: sudo /opt/splunkforwarder/bin/splunk enable boot-start --accept-license --answer-yes
        timeout: 60
        responses:
          (.*)Please enter an administrator username(.*): "admin"
          (.*)Please enter a new password(.*): "P@ssw0rd"
          (.*)Please confirm new password(.*): "P@ssw0rd"
      tags: splunk

    - name: Start Splunk Forwarder
      ansible.builtin.shell: /opt/splunkforwarder/bin/splunk start --accept-license
      tags: splunk

    - name: Configure the data to go to an indexer
      ansible.builtin.shell: "sudo /opt/splunkforwarder/bin/splunk add forward-server {{ splunk_ip }} -auth admin:P@ssw0rd"
      tags: splunk

    - name: Add files to monitor
      ansible.builtin.shell: "sudo /opt/splunkforwarder/bin/splunk add monitor /var/log -index {{inventory_hostname.split('_')[0]}} -auth admin:P@ssw0rd"
      tags: splunk

    - name: Add files to monitor
      ignore_errors: True
      ansible.builtin.shell: "sudo /opt/splunkforwarder/bin/splunk add monitor /opt/UERANSIM/log -index {{inventory_hostname.split('_')[0]}} -auth admin:P@ssw0rd"
      tags: splunk

    - name: start splunk
      ansible.builtin.shell: sudo /opt/splunkforwarder/bin/splunk restart
      tags: splunk

    - name: Remove installer file
      file:
        path: /tmp/deploy/
        state: absent
      tags: splunk

    - name: Check if Carbon Black exists
      stat:
        path: /var/opt/carbonblack
      register: cb_stat
      tags: carbonblack

    - name: Create /tmp/deploy
      ansible.builtin.file:
        path: /tmp/deploy
        state: directory
      when: not cb_stat.stat.exists
      tags: carbonblack

    - name: Download file (Carbon Black)
      ansible.builtin.get_url:
        url: "{{ download_url }}/CarbonBlackLinuxInstaller.tar.gz"
        dest: /tmp/deploy/CarbonBlackLinuxInstaller.tar.gz
      when: not cb_stat.stat.exists
      tags: carbonblack

    - name: Unzip Carbon Black file
      ansible.builtin.unarchive:
        src: /tmp/deploy/CarbonBlackLinuxInstaller.tar.gz
        dest: /tmp/deploy/
        remote_src: yes
      when: not cb_stat.stat.exists
      tags: carbonblack

    - name: Install Carbon Black
      ansible.builtin.shell: sudo /tmp/deploy/CarbonBlackClientSetup-linux-v7.0.3.15300.sh
      tags: carbonblack

    - name: Create new sudo user
      ansible.builtin.user:
        name: "{{ username }}"
        state: present
        shell: /bin/bash
        groups: sudo
        append: yes
        password: "{{ password | password_hash('sha512') }}"
      tags: harden

    - name: Enable Root Login
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
      tags: harden

    - name: Add AuthorizedKeyFile
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#AuthorizedKeyFile"
        line: "AuthorizedKeyFile .ssh/authorized_keys /etc/ssh/%u/authorized_keys"
      tags: harden

    - name: Copy SSH key
      ansible.posix.authorized_key:
        user: "{{ username }}"
        state: present
        key: "{{ lookup('file', 'keys/id_rsa.pub') }}"
      tags: harden

    - name: Copy SSH key 2
      ansible.posix.authorized_key:
        user: "{{ username }}"
        path: "/etc/ssh/{{ username }}/authorized_keys"
        state: present
        key: "{{ lookup('file', 'keys/id_rsa.pub') }}"
      tags: harden

    - name: Chown /etc/ssh/linux_user directory
      ansible.builtin.file:
        path: /etc/ssh/linux_user
        recurse: true
        owner: 'linux_user'
        group: 'linux_user'
      tags: harden

    - name: Log SSH connections
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^LogLevel"
        line: "LogLevel VERBOSE"
      tags: harden

    - name: Disable root Acc
      ansible.builtin.user:
        name: root
        password_lock: yes
      tags: harden

    - name: Reboot machine
      ansible.builtin.reboot:
      tags: reboot
